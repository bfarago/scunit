#!\bin\perl
#unittest call list collector ang genererator script
#Writed by Barna Farago
#
$filter='.c';
# $dir=`pwd`;
$dir='..\\src\\';
$configheader="scunit_config.h";
$alltestmain="main.c";

$logfile='collect.log';
$search='TEST_BEGIN';
$searchdir=$dir;
$searchdir=~tr/(\\)/\//;
print $searchdir;
#`grep -l- -d+ $search $dir*.c >$logfile`;

if (@lines=`cat $logfile`){
 sort(@lines);
 foreach $line(@lines){
    if ( $line=~m/($search)\(([^,]+),([^,]+)\).*$/mi){
      $fix=$2; $fn=$3;
      next if($line =~m/#define/mi);
      next if($line =~m/\.svn/mi);
      $key="$fix-$fn";
      if (!(grep $_ eq $fix, @fixtures)){
        push @fixtures, $fix;
        $line=~tr/(\\)/\//;
        print $line;
        if ($line=~m/$searchdir(.+)\.[cp]+/i){
            $hfile=$1.".h";
            push @hfiles, $hfile unless (grep $_ eq $hfile, @hfiles);
        }
      }

      if (!($keys{$key})){
        $keys{$key}=1;
        $caller{$fix}.="    UNITTEST_CALL($2,$3);\n";
        $forward{$fix}.="TEST_FUNCTION($2,$3);\n";
      }
    }
 }
}

&genHeader();
&genMain();

sub genHeader(){
 open(A, ">$dir$configheader");
 print A "/*Generated by collect.pl. Don't touch, it will be overwriten by the script next time.\n*/\n";
 print A "#ifndef _SCUNIT_CONFIG_H_\n#define _SCUNIT_CONFIG_H_\n\n";
 print A "//#define UNITTEST_ENABLE\n\n";
 print A "#ifdef UNITTEST_ENABLE\n";
 foreach $fix(@fixtures){
    print A "   #define UNITTESTFIXTURE_ENABLE_$fix\n";
 }
 print A "#endif\n";
 print A "\n#endif\n";
 close(A);
}

sub genMain(){
 open(A, ">main.c");
 print A "/*Generated by collect.pl. Don't touch, it will be overwriten by the script next time.\n*/\n";
 print A "#include <stdio.h>\n#include <stdlib.h>\n";
 print A "#include \"scunit.h\"\n\n";
 $hcount=0;
 foreach $h(@hfiles){
 #   print A "#include \"$h\"\n";
 #   $hcount++;
 }
 if (!$hcount){
    print A "//Forward declarations\n";
     foreach $fix(@fixtures){
        print A "#ifdef UNITTESTFIXTURE_ENABLE_$fix\n";
        print A $forward{$fix};
        print A "#endif\n";
     }
 }
 print A "\nint main(int argc, char** argv){\n";
 print A "    UNITTEST_INIT();\n";
 foreach $fix(@fixtures){
    print A "    #ifdef UNITTESTFIXTURE_ENABLE_$fix\n";
    print A $caller{$fix};
    print A "    #endif\n";
 }
 print A "    printf(\"----------------------------\\n\");\n    UNITTEST_REPORT();\n";
 print A "    return UNITTEST_RESULT;\n}\n";
 close(A);
}
